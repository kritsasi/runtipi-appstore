#!/bin/sh

set -eu

echo "[DNS-Updater] Starting container event listener..."

cf_url="https://api.cloudflare.com/client/v4"
cf_zone_id="${CF_DNS__ACCOUNTS__SCOPED_ZONE}"
cf_domain="${CF_DNS__DOMAINS_0__NAME}"
cf_tunnel_id="${CF_DNS__ACCOUNTS__SCOPED_TUNNEL}"
cf_api_token="${CF_DNS__AUTH__SCOPED_TOKEN}"
cf_proxy="${CF_DNS__DOMAINS_0__PROXIED:-false}"

# === Main loop ===
docker events --filter "event=create" --filter "event=destroy" --filter "type=container" |
while read -r line; do
  echo "[DNS-Updater] Event: $line"
  echo "----------------------------------------"

  container_id=$(echo "$line" | awk '{print $4}')
  echo "Container ID: $container_id"

  dn=$(echo "$line" | sed -n 's/.*Host(`\([^`]*\)`).*/\1/p' | grep "$cf_domain" || true)
  if [ -z "$dn" ]; then
    echo "No matching domain found in event — skipping"
    echo "----------------------------------------"
    continue
  fi

  echo "Extracted domain: $dn"

  if echo "$line" | grep -q 'create'; then
    echo "Action: CREATE"
    response=$(curl -sS -X POST "$cf_url/zones/$cf_zone_id/dns_records" \
      -H "Authorization: Bearer $cf_api_token" \
      -H "Content-Type: application/json" \
      --data '{
        "type": "CNAME",
        "name": "'"$dn"'",
        "content": "'"$cf_tunnel_id"'",
        "proxied": '"$cf_proxy"'
      }')
    echo "Cloudflare response (create): $response"

  elif echo "$line" | grep -q 'destroy'; then
    echo "Action: DESTROY"
    query=$(curl -sS -G "$cf_url/zones/$cf_zone_id/dns_records" \
      -H "Authorization: Bearer $cf_api_token" \
      --data-urlencode "type=CNAME" \
      --data-urlencode "name=$dn")
    id=$(echo "$query" | jq -r --arg dn "$dn" '.result[] | select(.name == $dn) | .id')
    if [ -n "$id" ]; then
      echo "DNS record found with ID: $id — deleting"
      delete_result=$(curl -sS -X DELETE "$cf_url/zones/$cf_zone_id/dns_records/$id" \
        -H "Authorization: Bearer $cf_api_token")
      echo "Cloudflare response (delete): $delete_result"
    else
      echo "No DNS record found to delete for: $dn"
    fi
  fi
  echo "----------------------------------------"
done
