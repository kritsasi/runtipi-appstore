version: '3.9'

services:
  openflow:
    container_name: openflow
    image: openiap/openflow:1.5.12.35
    restart: unless-stopped
    deploy:
      replicas: 1
    ports:
      - "3000:3000"   # internalPort
      - "50051:50051"
      - "5858:5858"
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - tipi_main_network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - protocol=${APP_PROTOCOL}
      - domain=${APP_DOMAIN}
      - agent_oidc_userinfo_endpoint=http://api:3000/oidc/me
      - agent_oidc_issuer=http://${APP_DOMAIN}/oidc
      - agent_oidc_authorization_endpoint=http://${APP_DOMAIN}/oidc/auth
      - agent_oidc_token_endpoint=http://api:3000/oidc/token
      - amqp_url=amqp://guest:guest@rabbitmq?frameMax=0x2000
      - mongodb_url=mongodb://mongodb:27017/?replicaSet=rs0
      - mongodb_db=openflow
      - aes_secret=${OPENFLOW_AES_SECRET}
      - TZ=${TZ}
    labels:
      # Main
      traefik.enable: true
      traefik.http.middlewares.openflow-web-redirect.redirectscheme.scheme: https
      traefik.http.services.openflow.loadbalancer.server.port: 80
      # Web
      traefik.http.routers.openflow-insecure.rule: Host(`${APP_DOMAIN}`)
      traefik.http.routers.openflow-insecure.entrypoints: web
      traefik.http.routers.openflow-insecure.service: openflow
      traefik.http.routers.openflow-insecure.middlewares: openflow-web-redirect
      # Websecure
      traefik.http.routers.openflow.rule: Host(`${APP_DOMAIN}`)
      traefik.http.routers.openflow.entrypoints: websecure
      traefik.http.routers.openflow.service: openflow
      traefik.http.routers.openflow.tls.certresolver: myresolver
      # Local domain
      traefik.http.routers.openflow-local-insecure.rule: Host(`openflow.${LOCAL_DOMAIN}`)
      traefik.http.routers.openflow-local-insecure.entrypoints: web
      traefik.http.routers.openflow-local-insecure.service: openflow
      traefik.http.routers.openflow-local-insecure.middlewares: openflow-web-redirect
      # Local domain secure
      traefik.http.routers.openflow-local.rule: Host(`openflow.${LOCAL_DOMAIN}`)
      traefik.http.routers.openflow-local.entrypoints: websecure
      traefik.http.routers.openflow-local.service: openflow
      traefik.http.routers.openflow-local.tls: true
      runtipi.managed: true

  mongodb:
    container_name: mongodb
    image: mongo:8.0.12
    restart: unless-stopped
    networks:
      - tipi_main_network
    volumes:
      - ${APP_DATA_DIR}/data/mongo:/data/db
    environment:
      - MONGO_REPLICA_SET_NAME=rs0
      - MONGO_INITDB_DATABASE=openflow
      - TZ=${TZ}
    command: "--bind_ip_all --replSet rs0"
    healthcheck:
      test: ["CMD-SHELL", "mongosh --quiet --eval 'db.adminCommand({ ping: 1 }).ok' | grep 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 20s
    labels:
      runtipi.managed: true
      
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    restart: unless-stopped
    volumes:
      - ${APP_DATA_DIR}/data/rabbitmq:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 12
      start_period: 20s
    networks:
      - tipi_main_network
    labels:
      runtipi.managed: true
