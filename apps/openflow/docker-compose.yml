version: '3.7'

services:
  openflow:
    container_name: openflow
    tty: true
    stdin_open: true
    image: openiap/openflow:1.5.12.29
    restart: unless-stopped
    ports:
      - ${APP_PORT}:80
    depends_on:
      - openflow-db
      - openflow-mq
    networks:
      - tipi_main_network
    environment:
      - protocol=${APP_PROTOCOL:-http}
      - domain=${APP_DOMAIN}
      - cookie_secret=${OPENFLOW_COOKIE_SECRET}
      - aes_secret=${OPENFLOW_AES_SECRET}
    labels:
      # Main
      traefik.enable: true
      traefik.http.middlewares.tooljet-web-redirect.redirectscheme.scheme: https
      traefik.http.services.tooljet.loadbalancer.server.port: 80
      # Web
      traefik.http.routers.tooljet-insecure.rule: Host(`${APP_DOMAIN}`)
      traefik.http.routers.tooljet-insecure.entrypoints: web
      traefik.http.routers.tooljet-insecure.service: openflow
      traefik.http.routers.tooljet-insecure.middlewares: openflow-web-redirect
      # Websecure
      traefik.http.routers.tooljet.rule: Host(`${APP_DOMAIN}`)
      traefik.http.routers.tooljet.entrypoints: websecure
      traefik.http.routers.tooljet.service: openflow
      traefik.http.routers.tooljet.tls.certresolver: myresolver
      # Local domain
      traefik.http.routers.tooljet-local-insecure.rule: Host(`openflow.${LOCAL_DOMAIN}`)
      traefik.http.routers.tooljet-local-insecure.entrypoints: web
      traefik.http.routers.tooljet-local-insecure.service: openflow
      traefik.http.routers.tooljet-local-insecure.middlewares: openflow-web-redirect
      # Local domain secure
      traefik.http.routers.tooljet-local.rule: Host(`openflow.${LOCAL_DOMAIN}`)
      traefik.http.routers.tooljet-local.entrypoints: websecure
      traefik.http.routers.tooljet-local.service: openflow
      traefik.http.routers.tooljet-local.tls: true
      runtipi.managed: true

  openflow-db:
    container_name: openflow-db
    image: mongo:6.0
    restart: unless-stopped
    networks:
      - tipi_main_network
    volumes:
      - ${APP_DATA_DIR}/data/mongo:/data/db
    healthcheck:
      test: ["CMD-SHELL", "mongosh --quiet --eval 'db.runCommand({ ping: 1 }).ok' | grep 1"]
      interval: 10s
      timeout: 5s
      retries: 10
    labels:
      runtipi.managed: true
  openflow-mq:
    container_name: openflow-mq
    image: rabbitmq:3-management
    restart: unless-stopped
    volumes:
      - ${APP_DATA_DIR}/data/rabbitmq:/var/lib/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=${OPENFLOW_MQ_USER}
      - RABBITMQ_DEFAULT_PASS=${OPENFLOW_MQ_PASS}
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics -q ping"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - tipi_main_network
    labels:
      runtipi.managed: true
